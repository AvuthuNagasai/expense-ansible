#- name: configure backend
#  hosts: backend
#  become: yes
#  vars:
#
#  tasks:
#    - name:  disable nodejs
#      ansible.builtin.command: dnf module disable nodejs -y
#
#    - name: enable node js
#      ansible.builtin.command: dnf module enable nodejs:20 -y
#
#    - name: install node js
#      ansible.builtin.dnf:
#        - node js
#
#    - name: add user expense
#      ansible.builtin.user:
#        name: Expense
#
#    - name: Create Directory
#      ansible.builtin.file:
#        path: /app
#        state: directory
#
#    - name: Download file from a file path
#      ansible.builtin.get_url:
#        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#        dest: /tmp/backend.zip
#
#    - name: Unzip the file
#      ansible.builtin.unarchive:
#        src: /tmp/backend.zip
#        dest: /app
#        remote_src: yes
#
- name: configure backend server
  become: yes
  hosts: backend
  vars:

  tasks:
    - name: disable default nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: enable nodejs:20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs
      ansible.builtin.dnf: # only works for Redhat family
        name: nodejs
        state: installed

    - name: create expense user
      ansible.builtin.user:
        name: expense

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: download backend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: unzip backend code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip # by default checks in ansible server
        dest: /app
        remote_src: yes

